diff --git a/mipi_csi2_rx/data/mipi_csi2_rx.tcl b/mipi_csi2_rx/data/mipi_csi2_rx.tcl
index 8cb22b2..5473e5f 100644
--- a/mipi_csi2_rx/data/mipi_csi2_rx.tcl
+++ b/mipi_csi2_rx/data/mipi_csi2_rx.tcl
@@ -61,61 +61,61 @@ proc generate {drv_handle} {
 	set axis_tdata_width [get_property CONFIG.AXIS_TDATA_WIDTH [get_cells -hier $drv_handle]]
 	hsi::utils::add_new_dts_param "${node}" "xlnx,axis-tdata-width" "$axis_tdata_width" int
 
-	set ports_node [add_or_get_dt_node -n "ports" -l mipi_csi_ports$drv_handle -p $node]
-	hsi::utils::add_new_dts_param "$ports_node" "#address-cells" 1 int
-	hsi::utils::add_new_dts_param "$ports_node" "#size-cells" 0 int
-	set port_node [add_or_get_dt_node -n "port" -l mipi_csi_port0$drv_handle -u 0 -p $ports_node]
-	hsi::utils::add_new_dts_param "$port_node" "reg" 0 int
-	hsi::utils::add_new_dts_param "${port_node}" "/* Fill cfa-pattern=rggb for raw data types, other fields video-format and video-width user needs to fill */" "" comment
-	hsi::utils::add_new_dts_param "$port_node" "xlnx,video-format" 12 int
-	hsi::utils::add_new_dts_param "$port_node" "xlnx,video-width" 8 int
-	hsi::utils::add_new_dts_param "$port_node" "xlnx,cfa-pattern" rggb string
+	#set ports_node [add_or_get_dt_node -n "ports" -l mipi_csi_ports$drv_handle -p $node]
+	#hsi::utils::add_new_dts_param "$ports_node" "#address-cells" 1 int
+	#hsi::utils::add_new_dts_param "$ports_node" "#size-cells" 0 int
+	#set port_node [add_or_get_dt_node -n "port" -l mipi_csi_port0$drv_handle -u 0 -p $ports_node]
+	#hsi::utils::add_new_dts_param "$port_node" "reg" 0 int
+	#hsi::utils::add_new_dts_param "${port_node}" "/* Fill cfa-pattern=rggb for raw data types, other fields video-format and video-width user needs to fill */" "" comment
+	#hsi::utils::add_new_dts_param "$port_node" "xlnx,video-format" 12 int
+	#hsi::utils::add_new_dts_param "$port_node" "xlnx,video-width" 8 int
+	#hsi::utils::add_new_dts_param "$port_node" "xlnx,cfa-pattern" rggb string
 
-	set port1_node [add_or_get_dt_node -n "port" -l mipi_csi_port1$drv_handle -u 1 -p $ports_node]
-	hsi::utils::add_new_dts_param "$port1_node" "reg" 1 int
-	hsi::utils::add_new_dts_param "${port1_node}" "/* Fill cfa-pattern=rggb for raw data types, other fields video-format,video-width user needs to fill */" "" comment
-	hsi::utils::add_new_dts_param "${port1_node}" "/* User need to add something like remote-endpoint=<&out> under the node csiss_in:endpoint */" "" comment
-	hsi::utils::add_new_dts_param "$port1_node" "xlnx,video-format" 12 int
-	hsi::utils::add_new_dts_param "$port1_node" "xlnx,video-width" 8 int
-	hsi::utils::add_new_dts_param "$port1_node" "xlnx,cfa-pattern" rggb string
-	set csiss_rx_node [add_or_get_dt_node -n "endpoint" -l mipi_csi_in$drv_handle -p $port1_node]
+	#set port1_node [add_or_get_dt_node -n "port" -l mipi_csi_port1$drv_handle -u 1 -p $ports_node]
+	#hsi::utils::add_new_dts_param "$port1_node" "reg" 1 int
+	#hsi::utils::add_new_dts_param "${port1_node}" "/* Fill cfa-pattern=rggb for raw data types, other fields video-format,video-width user needs to fill */" "" comment
+	#hsi::utils::add_new_dts_param "${port1_node}" "/* User need to add something like remote-endpoint=<&out> under the node csiss_in:endpoint */" "" comment
+	#hsi::utils::add_new_dts_param "$port1_node" "xlnx,video-format" 12 int
+	#hsi::utils::add_new_dts_param "$port1_node" "xlnx,video-width" 8 int
+	#hsi::utils::add_new_dts_param "$port1_node" "xlnx,cfa-pattern" rggb string
+	#set csiss_rx_node [add_or_get_dt_node -n "endpoint" -l mipi_csi_in$drv_handle -p $port1_node]
 
-	set outip [get_connected_stream_ip [get_cells -hier $drv_handle] "VIDEO_OUT"]
-	if {[llength $outip]} {
-		if {[string match -nocase [get_property IP_NAME $outip] "axis_broadcaster"]} {
-			set mipi_node [add_or_get_dt_node -n "endpoint" -l mipi_csirx_out$drv_handle -p $port_node]
-			gen_endpoint $drv_handle "mipi_csirx_out$drv_handle"
-			hsi::utils::add_new_dts_param "$mipi_node" "remote-endpoint" $outip$drv_handle reference
-			gen_remoteendpoint $drv_handle "$outip$drv_handle"
-		}
-	}
-	foreach ip $outip {
-		if {[llength $ip]} {
-			set intfpins [::hsi::get_intf_pins -of_objects [get_cells -hier $ip] -filter {TYPE==MASTER || TYPE ==INITIATOR}]
-			set ip_mem_handles [hsi::utils::get_ip_mem_ranges $ip]
-			if {[llength $ip_mem_handles]} {
-				set base [string tolower [get_property BASE_VALUE $ip_mem_handles]]
-				set csi_rx_node [add_or_get_dt_node -n "endpoint" -l mipi_csirx_out$drv_handle -p $port_node]
-				gen_endpoint $drv_handle "mipi_csirx_out$drv_handle"
-				hsi::utils::add_new_dts_param "$csi_rx_node" "remote-endpoint" $ip$drv_handle reference
-				gen_remoteendpoint $drv_handle $ip$drv_handle
-				if {[string match -nocase [get_property IP_NAME $ip] "v_frmbuf_wr"]} {
-                                        gen_frmbuf_node $ip $drv_handle
-                                }
-			} else {
-				set connectip [get_connect_ip $ip $intfpins]
-				if {[llength $connectip]} {
-					set csi_rx_node [add_or_get_dt_node -n "endpoint" -l mipi_csirx_out$drv_handle -p $port_node]
-					gen_endpoint $drv_handle "mipi_csirx_out$drv_handle"
-					hsi::utils::add_new_dts_param "$csi_rx_node" "remote-endpoint" $connectip$drv_handle reference
-					gen_remoteendpoint $drv_handle $connectip$drv_handle
-					if {[string match -nocase [get_property IP_NAME $connectip] "v_frmbuf_wr"]} {
-						gen_frmbuf_node $connectip $drv_handle
-					}
-				}
-			}
-		}
-	}
+	#set outip [get_connected_stream_ip [get_cells -hier $drv_handle] "VIDEO_OUT"]
+	#if {[llength $outip]} {
+	#	if {[string match -nocase [get_property IP_NAME $outip] "axis_broadcaster"]} {
+	#		set mipi_node [add_or_get_dt_node -n "endpoint" -l mipi_csirx_out$drv_handle -p $port_node]
+	#		gen_endpoint $drv_handle "mipi_csirx_out$drv_handle"
+	#		hsi::utils::add_new_dts_param "$mipi_node" "remote-endpoint" $outip$drv_handle reference
+	#		gen_remoteendpoint $drv_handle "$outip$drv_handle"
+	#	}
+	#}
+	#foreach ip $outip {
+	#	if {[llength $ip]} {
+	#		set intfpins [::hsi::get_intf_pins -of_objects [get_cells -hier $ip] -filter {TYPE==MASTER || TYPE ==INITIATOR}]
+	#		set ip_mem_handles [hsi::utils::get_ip_mem_ranges $ip]
+	#		if {[llength $ip_mem_handles]} {
+	#			set base [string tolower [get_property BASE_VALUE $ip_mem_handles]]
+	#			set csi_rx_node [add_or_get_dt_node -n "endpoint" -l mipi_csirx_out$drv_handle -p $port_node]
+	#			gen_endpoint $drv_handle "mipi_csirx_out$drv_handle"
+	#			hsi::utils::add_new_dts_param "$csi_rx_node" "remote-endpoint" $ip$drv_handle reference
+	#			gen_remoteendpoint $drv_handle $ip$drv_handle
+	#			if {[string match -nocase [get_property IP_NAME $ip] "v_frmbuf_wr"]} {
+    #                                    gen_frmbuf_node $ip $drv_handle
+    #                            }
+	#		} else {
+	#			set connectip [get_connect_ip $ip $intfpins]
+	#			if {[llength $connectip]} {
+	#				set csi_rx_node [add_or_get_dt_node -n "endpoint" -l mipi_csirx_out$drv_handle -p $port_node]
+	#				gen_endpoint $drv_handle "mipi_csirx_out$drv_handle"
+	#				hsi::utils::add_new_dts_param "$csi_rx_node" "remote-endpoint" $connectip$drv_handle reference
+	#				gen_remoteendpoint $drv_handle $connectip$drv_handle
+	#				if {[string match -nocase [get_property IP_NAME $connectip] "v_frmbuf_wr"]} {
+	#					gen_frmbuf_node $connectip $drv_handle
+	#				}
+	#			}
+	#		}
+	#	}
+	#}
 
 }
 
